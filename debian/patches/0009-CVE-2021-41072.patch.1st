commit e0485802ec72996c20026da320650d8362f555bd
Author: Phillip Lougher <phillip@squashfs.org.uk>
Date:   Sun Sep 12 23:50:06 2021 +0100

    Unsquashfs: additional write outside destination directory exploit fix
    
    An issue on github (https://github.com/plougher/squashfs-tools/issues/72)
    showed how some specially crafted Squashfs filesystems containing
    invalid file names (with '/' and '..') can cause Unsquashfs to write
    files outside of the destination directory.
    
    Since then it has been shown that specially crafted Squashfs filesystems
    that contain a symbolic link pointing outside of the destination directory,
    coupled with an identically named file within the same directory, can
    cause Unsquashfs to write files outside of the destination directory.
    
    Specifically the symbolic link produces a pathname pointing outside
    of the destination directory, which is then followed when writing the
    duplicate identically named file within the directory.
    
    This commit fixes this exploit by explictly checking for duplicate
    filenames within a directory.  As directories in v2.1, v3.x, and v4.0
    filesystems are sorted, this is achieved by checking for consecutively
    identical filenames.  Additionally directories are checked to
    ensure they are sorted, to avoid attempts to evade the duplicate
    check.
    
    Version 1.x and 2.0 filesystems (where the directories were unsorted)
    are sorted and then the above duplicate filename check is applied.
    
    Signed-off-by: Phillip Lougher <phillip@squashfs.org.uk>

Index: squashfs-tools-4.2+20130409/Makefile
===================================================================
--- squashfs-tools-4.2+20130409.orig/Makefile	2021-09-24 11:39:15.816635250 +0200
+++ squashfs-tools-4.2+20130409/Makefile	2021-09-24 11:46:13.724599420 +0200
@@ -101,7 +101,7 @@
 	caches-queues-lists.o
 
 UNSQUASHFS_OBJS = unsquashfs.o unsquash-1.o unsquash-2.o unsquash-3.o \
-	unsquash-4.o unsquash-1234.o swap.o compressor.o
+	unsquash-4.o unsquash-1234.o unsquash-12.o swap.o compressor.o
 
 CFLAGS ?= -O2
 CFLAGS += $(EXTRA_CFLAGS) $(INCLUDEDIR) -D_FILE_OFFSET_BITS=64 \
@@ -260,6 +260,8 @@
 
 unsquash-1234.o: unsquash-1234.c
 
+unsquash-1234.o: unsquash-12.c
+
 unsquashfs_xattr.o: unsquashfs_xattr.c unsquashfs.h squashfs_fs.h xattr.h
 
 
Index: squashfs-tools-4.2+20130409/unsquash-1.c
===================================================================
--- squashfs-tools-4.2+20130409.orig/unsquash-1.c	2021-09-24 11:39:15.816635250 +0200
+++ squashfs-tools-4.2+20130409/unsquash-1.c	2021-09-24 11:39:15.812635250 +0200
@@ -315,6 +315,12 @@
 		}
 	}
 
+	/* check directory for duplicate names.  Need to sort directory first */
+	sort_directory(dir);
+	if(check_directory(dir) == FALSE) {
+		ERROR("File system corrupted: directory has duplicate names\n");
+		goto corrupted;
+	}
 	return dir;
 
 corrupted:
Index: squashfs-tools-4.2+20130409/unsquash-12.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ squashfs-tools-4.2+20130409/unsquash-12.c	2021-09-24 11:39:15.812635250 +0200
@@ -0,0 +1,110 @@
+/*
+ * Unsquash a squashfs filesystem.  This is a highly compressed read only
+ * filesystem.
+ *
+ * Copyright (c) 2021
+ * Phillip Lougher <phillip@squashfs.org.uk>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2,
+ * or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+ *
+ * unsquash-12.c
+ *
+ * Helper functions used by unsquash-1 and unsquash-2.
+ */
+
+#include "unsquashfs.h"
+
+/*
+ * Bottom up linked list merge sort.
+ *
+ */
+void sort_directory(struct dir *dir)
+{
+	struct dir_ent *cur, *l1, *l2, *next;
+	int len1, len2, stride = 1;
+
+	if(dir->dir_count < 2)
+		return;
+
+	/*
+	 * We can consider our linked-list to be made up of stride length
+	 * sublists.  Eacn iteration around this loop merges adjacent
+	 * stride length sublists into larger 2*stride sublists.  We stop
+	 * when stride becomes equal to the entire list.
+	 *
+	 * Initially stride = 1 (by definition a sublist of 1 is sorted), and
+	 * these 1 element sublists are merged into 2 element sublists,  which
+	 * are then merged into 4 element sublists and so on.
+	 */
+	do {
+		l2 = dir->dirs; /* head of current linked list */
+		cur = NULL; /* empty output list */
+
+		/*
+		 * Iterate through the linked list, merging adjacent sublists.
+		 * On each interation l2 points to the next sublist pair to be
+		 * merged (if there's only one sublist left this is simply added
+		 * to the output list)
+		 */
+		while(l2) {
+			l1 = l2;
+			for(len1 = 0; l2 && len1 < stride; len1 ++, l2 = l2->next);
+			len2 = stride;
+
+			/*
+			 * l1 points to first sublist.
+			 * l2 points to second sublist.
+			 * Merge them onto the output list
+			 */
+			while(len1 && l2 && len2) {
+				if(strcmp(l1->name, l2->name) <= 0) {
+					next = l1;
+					l1 = l1->next;
+					len1 --;
+				} else {
+					next = l2;
+					l2 = l2->next;
+					len2 --;
+				}
+
+				if(cur) {
+					cur->next = next;
+					cur = next;
+				} else
+					dir->dirs = cur = next;
+			}
+			/*
+			 * One sublist is now empty, copy the other one onto the
+			 * output list
+			 */
+			for(; len1; len1 --, l1 = l1->next) {
+				if(cur) {
+					cur->next = l1;
+					cur = l1;
+				} else
+					dir->dirs = cur = l1;
+			}
+			for(; l2 && len2; len2 --, l2 = l2->next) {
+				if(cur) {
+					cur->next = l2;
+					cur = l2;
+				} else
+					dir->dirs = cur = l2;
+			}
+		}
+		cur->next = NULL;
+		stride = stride << 1;
+	} while(stride < dir->dir_count);
+}
Index: squashfs-tools-4.2+20130409/unsquash-1234.c
===================================================================
--- squashfs-tools-4.2+20130409.orig/unsquash-1234.c	2021-09-24 11:39:15.816635250 +0200
+++ squashfs-tools-4.2+20130409/unsquash-1234.c	2021-09-24 11:39:15.812635250 +0200
@@ -72,3 +72,24 @@
 
 	free(dir);
 }
+
+
+/*
+ * Check directory for duplicate names.  As the directory should be sorted,
+ * duplicates will be consecutive.  Obviously we also need to check if the
+ * directory has been deliberately unsorted, to evade this check.
+ */
+int check_directory(struct dir *dir)
+{
+	int i;
+	struct dir_ent *ent;
+
+	if(dir->dir_count < 2)
+		return TRUE;
+
+	for(ent = dir->dirs, i = 0; i < dir->dir_count - 1; ent = ent->next, i++)
+		if(strcmp(ent->name, ent->next->name) >= 0)
+			return FALSE;
+
+	return TRUE;
+}
Index: squashfs-tools-4.2+20130409/unsquash-3.c
===================================================================
--- squashfs-tools-4.2+20130409.orig/unsquash-3.c	2021-09-24 11:39:15.816635250 +0200
+++ squashfs-tools-4.2+20130409/unsquash-3.c	2021-09-24 11:39:15.816635250 +0200
@@ -393,6 +393,12 @@
 		}
 	}
 
+	/* check directory for duplicate names and sorting */
+	if(check_directory(dir) == FALSE) {
+		ERROR("File system corrupted: directory has duplicate names or is unsorted\n");
+		goto corrupted;
+	}
+
 	return dir;
 
 corrupted:
Index: squashfs-tools-4.2+20130409/unsquash-4.c
===================================================================
--- squashfs-tools-4.2+20130409.orig/unsquash-4.c	2021-09-24 11:39:15.816635250 +0200
+++ squashfs-tools-4.2+20130409/unsquash-4.c	2021-09-24 11:39:15.816635250 +0200
@@ -352,6 +352,12 @@
 		}
 	}
 
+	/* check directory for duplicate names and sorting */
+	if(check_directory(dir) == FALSE) {
+		ERROR("File system corrupted: directory has duplicate names or is unsorted\n");
+		goto corrupted;
+	}
+
 	return dir;
 
 corrupted:
Index: squashfs-tools-4.2+20130409/unsquashfs.h
===================================================================
--- squashfs-tools-4.2+20130409.orig/unsquashfs.h	2021-09-24 11:39:15.816635250 +0200
+++ squashfs-tools-4.2+20130409/unsquashfs.h	2021-09-24 11:39:38.992633555 +0200
@@ -271,3 +271,7 @@
 /* unsquash-1234.c */
 extern int check_name(char *, int);
 extern void squashfs_closedir(struct dir *);
+extern int check_directory(struct dir *);
+
+/* unsquash-12.c */
+extern void sort_directory(struct dir *);
