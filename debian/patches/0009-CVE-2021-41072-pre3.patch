commit 9938154174756ee48a94ea0b076397a2944b028d
Author: Phillip Lougher <phillip@squashfs.org.uk>
Date:   Sun Sep 12 22:58:11 2021 +0100

    unsquashfs: use linked list to store directory names
    
    This should bring higher performance, and it allows sorting
    if necessary (1.x and 2.0 filesystems).
    
    Signed-off-by: Phillip Lougher <phillip@squashfs.org.uk>

Index: squashfs-tools-4.2+20130409/unsquash-1.c
===================================================================
--- squashfs-tools-4.2+20130409.orig/unsquash-1.c	2021-09-24 11:39:04.696636052 +0200
+++ squashfs-tools-4.2+20130409/unsquash-1.c	2021-09-24 11:39:04.692636052 +0200
@@ -211,7 +211,7 @@
 	long long start;
 	int bytes;
 	int dir_count, size;
-	struct dir_ent *new_dir;
+        struct dir_ent *ent, *cur_ent = NULL;
 	struct dir *dir;
 
 	TRACE("squashfs_opendir: inode start block %d, offset %d\n",
@@ -224,7 +224,7 @@
 		EXIT_UNSQUASH("squashfs_opendir: malloc failed!\n");
 
 	dir->dir_count = 0;
-	dir->cur_entry = 0;
+	dir->cur_entry = NULL;
 	dir->mode = (*i)->mode;
 	dir->uid = (*i)->uid;
 	dir->guid = (*i)->gid;
@@ -295,19 +295,21 @@
 			TRACE("squashfs_opendir: directory entry %s, inode "
 				"%d:%d, type %d\n", dire->name,
 				dirh.start_block, dire->offset, dire->type);
-			if((dir->dir_count % DIR_ENT_SIZE) == 0) {
-				new_dir = realloc(dir->dirs, (dir->dir_count +
-					DIR_ENT_SIZE) * sizeof(struct dir_ent));
-				if(new_dir == NULL)
-					EXIT_UNSQUASH("squashfs_opendir: "
+                        ent = malloc(sizeof(struct dir_ent));
+                        if(ent == NULL)
+				EXIT_UNSQUASH("squashfs_opendir: "
 						"realloc failed!\n");
-				dir->dirs = new_dir;
-			}
-                        dir->dirs[dir->dir_count].name = strdup(dire->name);
-			dir->dirs[dir->dir_count].start_block =
-				dirh.start_block;
-			dir->dirs[dir->dir_count].offset = dire->offset;
-			dir->dirs[dir->dir_count].type = dire->type;
+
+                        ent->name = strdup(dire->name);
+                        ent->start_block = dirh.start_block;
+                        ent->offset = dire->offset;
+                        ent->type = dire->type;
+                        ent->next = NULL;
+                        if(cur_ent == NULL)
+                                dir->dirs = ent;
+                        else
+                                cur_ent->next = ent;
+                        cur_ent = ent;
 			dir->dir_count ++;
 			bytes += dire->size + 1;
 		}
Index: squashfs-tools-4.2+20130409/unsquash-1234.c
===================================================================
--- squashfs-tools-4.2+20130409.orig/unsquash-1234.c	2021-09-24 11:39:04.696636052 +0200
+++ squashfs-tools-4.2+20130409/unsquash-1234.c	2021-09-24 11:39:04.692636052 +0200
@@ -60,11 +60,15 @@
 
 void squashfs_closedir(struct dir *dir)
 {
-	int i;
+	struct dir_ent *ent = dir->dirs;
 
-	for(i = 0; i < dir->dir_count; i++)
-		free(dir->dirs[i].name);
+	while(ent) {
+		struct dir_ent *tmp = ent;
+
+		ent = ent->next;
+		free(tmp->name);
+		free(tmp);
+	}
 
-	free(dir->dirs);
 	free(dir);
 }
Index: squashfs-tools-4.2+20130409/unsquash-3.c
===================================================================
--- squashfs-tools-4.2+20130409.orig/unsquash-3.c	2021-09-24 11:39:04.696636052 +0200
+++ squashfs-tools-4.2+20130409/unsquash-3.c	2021-09-24 11:39:04.692636052 +0200
@@ -288,7 +288,7 @@
 	long long start;
 	int bytes;
 	int dir_count, size;
-	struct dir_ent *new_dir;
+	struct dir_ent *ent, *cur_ent = NULL;
 	struct dir *dir;
 
 	TRACE("squashfs_opendir: inode start block %d, offset %d\n",
@@ -301,7 +301,7 @@
 		EXIT_UNSQUASH("squashfs_opendir: malloc failed!\n");
 
 	dir->dir_count = 0;
-	dir->cur_entry = 0;
+	dir->cur_entry = NULL;
 	dir->mode = (*i)->mode;
 	dir->uid = (*i)->uid;
 	dir->guid = (*i)->gid;
@@ -373,19 +373,21 @@
 			TRACE("squashfs_opendir: directory entry %s, inode "
 				"%d:%d, type %d\n", dire->name,
 				dirh.start_block, dire->offset, dire->type);
-			if((dir->dir_count % DIR_ENT_SIZE) == 0) {
-				new_dir = realloc(dir->dirs, (dir->dir_count +
-					DIR_ENT_SIZE) * sizeof(struct dir_ent));
-				if(new_dir == NULL)
-					EXIT_UNSQUASH("squashfs_opendir: "
+                        ent = malloc(sizeof(struct dir_ent));
+                        if(ent == NULL)
+				EXIT_UNSQUASH("squashfs_opendir: "
 						"realloc failed!\n");
-				dir->dirs = new_dir;
-			}
-                        dir->dirs[dir->dir_count].name = strdup(dire->name);
-			dir->dirs[dir->dir_count].start_block =
-				dirh.start_block;
-			dir->dirs[dir->dir_count].offset = dire->offset;
-			dir->dirs[dir->dir_count].type = dire->type;
+
+                        ent->name = strdup(dire->name);
+                        ent->start_block = dirh.start_block;
+                        ent->offset = dire->offset;
+                        ent->type = dire->type;
+                        ent->next = NULL;
+                        if(cur_ent == NULL)
+                                dir->dirs = ent;
+                        else
+                                cur_ent->next = ent;
+                        cur_ent = ent;
 			dir->dir_count ++;
 			bytes += dire->size + 1;
 		}
Index: squashfs-tools-4.2+20130409/unsquash-4.c
===================================================================
--- squashfs-tools-4.2+20130409.orig/unsquash-4.c	2021-09-24 11:39:04.696636052 +0200
+++ squashfs-tools-4.2+20130409/unsquash-4.c	2021-09-24 11:39:04.692636052 +0200
@@ -258,7 +258,7 @@
 	long long start;
 	int bytes;
 	int dir_count, size;
-	struct dir_ent *new_dir;
+	struct dir_ent *ent, *cur_ent = NULL;
 	struct dir *dir;
 
 	TRACE("squashfs_opendir: inode start block %d, offset %d\n",
@@ -271,7 +271,7 @@
 		EXIT_UNSQUASH("squashfs_opendir: malloc failed!\n");
 
 	dir->dir_count = 0;
-	dir->cur_entry = 0;
+	dir->cur_entry = NULL;
 	dir->mode = (*i)->mode;
 	dir->uid = (*i)->uid;
 	dir->guid = (*i)->gid;
@@ -332,19 +332,21 @@
 			TRACE("squashfs_opendir: directory entry %s, inode "
 				"%d:%d, type %d\n", dire->name,
 				dirh.start_block, dire->offset, dire->type);
-			if((dir->dir_count % DIR_ENT_SIZE) == 0) {
-				new_dir = realloc(dir->dirs, (dir->dir_count +
-					DIR_ENT_SIZE) * sizeof(struct dir_ent));
-				if(new_dir == NULL)
-					EXIT_UNSQUASH("squashfs_opendir: "
+                        ent = malloc(sizeof(struct dir_ent));
+                        if(ent == NULL)
+				EXIT_UNSQUASH("squashfs_opendir: "
 						"realloc failed!\n");
-				dir->dirs = new_dir;
-			}
-                        dir->dirs[dir->dir_count].name = strdup(dire->name);
-			dir->dirs[dir->dir_count].start_block =
-				dirh.start_block;
-			dir->dirs[dir->dir_count].offset = dire->offset;
-			dir->dirs[dir->dir_count].type = dire->type;
+
+                        ent->name = strdup(dire->name);
+                        ent->start_block = dirh.start_block;
+                        ent->offset = dire->offset;
+                        ent->type = dire->type;
+                        ent->next = NULL;
+                        if(cur_ent == NULL)
+                                dir->dirs = ent;
+                        else
+                                cur_ent->next = ent;
+                        cur_ent = ent;
 			dir->dir_count ++;
 			bytes += dire->size + 1;
 		}
Index: squashfs-tools-4.2+20130409/unsquashfs.c
===================================================================
--- squashfs-tools-4.2+20130409.orig/unsquashfs.c	2021-09-24 11:39:04.696636052 +0200
+++ squashfs-tools-4.2+20130409/unsquashfs.c	2021-09-24 11:39:04.692636052 +0200
@@ -1195,14 +1195,18 @@
 int squashfs_readdir(struct dir *dir, char **name, unsigned int *start_block,
 unsigned int *offset, unsigned int *type)
 {
-	if(dir->cur_entry == dir->dir_count)
+	if(dir->cur_entry == NULL)
+		dir->cur_entry = dir->dirs;
+	else
+		dir->cur_entry = dir->cur_entry->next;
+
+	if(dir->cur_entry == NULL)
 		return FALSE;
 
-	*name = dir->dirs[dir->cur_entry].name;
-	*start_block = dir->dirs[dir->cur_entry].start_block;
-	*offset = dir->dirs[dir->cur_entry].offset;
-	*type = dir->dirs[dir->cur_entry].type;
-	dir->cur_entry ++;
+	*name = dir->cur_entry->name;
+	*start_block = dir->cur_entry->start_block;
+	*offset = dir->cur_entry->offset;
+	*type = dir->cur_entry->type;
 
 	return TRUE;
 }
Index: squashfs-tools-4.2+20130409/unsquashfs.h
===================================================================
--- squashfs-tools-4.2+20130409.orig/unsquashfs.h	2021-09-24 11:39:04.696636052 +0200
+++ squashfs-tools-4.2+20130409/unsquashfs.h	2021-09-24 11:39:04.692636052 +0200
@@ -169,17 +169,18 @@
 	unsigned int	start_block;
 	unsigned int	offset;
 	unsigned int	type;
+        struct dir_ent  *next;
 };
 
 struct dir {
 	int		dir_count;
-	int 		cur_entry;
 	unsigned int	mode;
 	uid_t		uid;
 	gid_t		guid;
 	unsigned int	mtime;
 	unsigned int xattr;
 	struct dir_ent	*dirs;
+	struct dir_ent  *cur_entry;
 };
 
 struct file_entry {
